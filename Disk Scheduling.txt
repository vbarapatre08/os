Q. FCFS

#include<stdio.h>
int ReqString[20],nor,nob,start,thm;
main()
{
int i,j,k;
printf("\nEnter No.of Requests: ");
scanf("%d",&nor);
printf("\nEnter Requests:\n");
for(i=0;i<nor;i++)
{
printf("[%d]=",i);
scanf("%d",&ReqString[i]);
}
printf("\nEnter No.of Cylinders: ");
scanf("%d",&nob);
printf("\nEnter Start Block: ");
scanf("%d",&start);
for(i=0;i<nor;i++)
{
printf("\n%d-%d",start,ReqString[i]);
 if(ReqString[i]>=start)
 {
thm+=ReqString[i]-start;
start=ReqString[i];
 }
 else
 {
 thm+=start-ReqString[i];
 start=ReqString[i];
 }
}
printf("\nTotal Head Movement: %d",thm);
}


Q. SSTF

#include<stdio.h>
int ReqString[20],nor,nob,start,thm;
void sort(int RS[])
{
int i,j,temp;
for(i=1;i<nor;i++)
{
for(j=0;j<nor-i;j++)
{
if(RS[j]>RS[j+1])
{
temp=RS[j];
RS[j]=RS[j+1];
RS[j+1]=temp;
}
}
}
}
void display(int RS[])
{
int i;
for(i=0;i<nor;i++)
printf(" %d",RS[i]);
}
int searchstartblock(int RS[])
{
int i;
for(i=0;i<nor;i++)
{
if(RS[i]==start)
return i;
}
return 1;
}
main()
{
int
i,j,k,ans,finish=0,leftpos,startpos,rightpos,leftdis,rightdis,initpos,flag=0;
printf("\nEnter No.of Requests: ");
scanf("%d",&nor);
printf("\nEnter Requests:\n");
for(i=0;i<nor;i++)
{
printf("[%d]=",i);
scanf("%d",&ReqString[i]);
}
printf("\nEnter No.of Cylinders: ");
scanf("%d",&nob);
printf("\nEnter Start Block: ");
scanf("%d",&start);
ans=searchstartblock(ReqString);
if(ans==1)
ReqString[nor++]=start;
sort(ReqString);
printf("\nRefString After Sorting: ");
display(ReqString);
startpos=searchstartblock(ReqString);
initpos=startpos;
leftpos=initpos-1;
rightpos=initpos+1;
while(1)
{
leftdis=ReqString[startpos]-ReqString[leftpos];
rightdis=ReqString[rightpos]-ReqString[startpos];
if(leftdis<rightdis)
{
printf("\n%d-%d",ReqString[startpos],ReqString[leftpos]);thm+=ReqString[startpos]-ReqString[leftpos];
startpos=leftpos;
leftpos--;
if(leftpos==-1)
{
break;
}

}
else if(leftdis>rightdis)
{
printf("\n%d-%d",ReqString[rightpos],ReqString[startpos]);
thm+=ReqString[rightpos]-ReqString[startpos];
startpos=rightpos;
rightpos++;
if(rightpos==nor)
{
break;
}
}
}
 printf("\nEnd of while loop");
while(leftpos>=0)
{
printf("\n%d-%d",ReqString[startpos],ReqString[leftpos]);thm+=ReqString[startpos]-ReqString[leftpos];
startpos=leftpos;
leftpos--;
}
while(rightpos<nor)
{
printf("\n%d-%d",ReqString[rightpos],ReqString[startpos]);thm+=ReqString[rightpos]-ReqString[startpos];
startpos=rightpos;
rightpos++;
}
printf("\nTotal Head Movement: %d",thm);
}


Q. SCAN

#include<stdio.h>
int ReqString[20],nor,nob,start,thm,min[10],max[10];
char direction;
int getmin()
{
int i,j=0,min=999;
for(i=0;i<nor;i++)
if(ReqString[i]<=min)
min=ReqString[i];
return min;
}
int getmax()
{
int i,j=0,max=0;
for(i=0;i<nor;i++)
if(ReqString[i]>max)
max=ReqString[i];
return max;
}
main()
{
int i,j,k,max,min;
printf("\nEnter No.of Requests: ");
scanf("%d",&nor);
printf("\nEnter Requests:\n");
for(i=0;i<nor;i++)
{
printf("[%d]=",i);
scanf("%d",&ReqString[i]);
}
printf("\nEnter No.of Cylinders: ");
scanf("%d",&nob);
printf("\nEnter Start Block: ");
scanf("%d",&start);
printf("\nEnter Direction: ");
scanf(" %c",&direction);
min=getmin();
max=getmax();
if(direction=='L')
{
printf("\n%d-0",start);
thm+=start-0;
start=0;
printf("\n%d-%d",max,start);
thm+=max-start;
}
else if(direction=='R')
{
printf("\n%d-%d",start,nob-1);
thm+=(nob-1)-start;
start=nob-1;
printf("\n%d-%d",start,min);
thm+=start-min;
}
printf("\nTotal Head Movement: %d",thm);
}


Q. LOOK

#include<stdio.h>
int ReqString[20],nor,nob,start,thm,min[10],max[10];
char direction;
int getmin()
{
int i,j=0,min=999;
for(i=0;i<nor;i++)
if(ReqString[i]<=min)
min=ReqString[i];
return min;
}
int getmax()
{
int i,j=0,max=0;
for(i=0;i<nor;i++)
if(ReqString[i]>max)
max=ReqString[i];
return max;
}
 main()
{
int i,j,k,max,min;
printf("\nEnter No.of Requests: ");
scanf("%d",&nor);
printf("\nEnter Requests:\n");
for(i=0;i<nor;i++)
{
printf("[%d]=",i);
scanf("%d",&ReqString[i]);
}
printf("\nEnter No.of Cylinders: ");
scanf("%d",&nob);
printf("\nEnter Start Block: ");
scanf("%d",&start);
printf("\nEnter Direction: ");
scanf(" %c",&direction);
min=getmin();
max=getmax();
if(direction=='L')
{
printf("\n%d-%d",start,min);
thm+=start-min;
start=min;
printf("\n%d-%d",max,start);
thm+=max-start;
}
else if(direction=='R')
{
printf("\n%d-%d",start,max);
thm+=max-start;
start=max;
printf("\n%d-%d",start,min);
thm+=start-min;
}
printf("\nTotal Head Movement: %d",thm);
}


Q. C-SCAN

#include<stdio.h>
int ReqString[20],nor,nob,start,thm,min[10],max[10];
char direction;
void sort(int RS[])
{
 int i,j,temp;
 for(i=1;i<nor;i++)
 {
 for(j=0;j<nor-i;j++)
 {
 if(RS[j]>RS[j+1])
 {
 temp=RS[j];
 RS[j]=RS[j+1];
 RS[j+1]=temp;
 }
 }
 }
}
main()
{
int i,j,k,spos;
printf("\nEnter No.of Requests: ");
scanf("%d",&nor);
printf("\nEnter Requests:\n");
for(i=0;i<nor;i++)
{
printf("[%d]=",i);
scanf("%d",&ReqString[i]);
}
printf("\nEnter No.of Cylinders: ");
scanf("%d",&nob);
printf("\nEnter Start Block: ");
scanf("%d",&start);
 ReqString[nor++]=start;
 sort(ReqString);
 for(i=0;i<nor;i++)
 printf(" %d",ReqString[i]);
 for(spos=0;spos<=nor && ReqString[spos]!=start; spos++);printf("\nEnter Direction: ");
scanf(" %c",&direction);
if(direction=='L')
{
printf("\n%d-0",start);
thm+=start-0;
printf("\n%d-%d",nob-1,ReqString[spos+1]);
thm+=(nob-1)-ReqString[spos+1];
}
else if(direction=='R')
{
printf("\n%d-%d",nob-1,start);
thm+=(nob-1)-start;
printf("\n%d-0",ReqString[spos-1]);
thm+=ReqString[spos-1]-0;
}
printf("\nTotal Head Movement: %d",thm);
}


Q. C-LOOK

#include<stdio.h>
int ReqString[20],nor,nob,start,thm,min[10],max[10];
char direction;
int getmin()
{
int i,j=0,min=999;
for(i=0;i<nor;i++)
if(ReqString[i]<=min)
min=ReqString[i];
return min;
}
int getmax()
{
int i,j=0,max=0;
for(i=0;i<nor;i++)
if(ReqString[i]>max)
max=ReqString[i];
return max;
}
void sort(int RS[])
{
 int i,j,temp;
 for(i=1;i<nor;i++)
 {
 for(j=0;j<nor-i;j++)
 {
 if(RS[j]>RS[j+1])
 {
 temp=RS[j];
 RS[j]=RS[j+1];
 RS[j+1]=temp;
 }
 }
 }
}
main()
{
int i,j,k,max,min,spos;
printf("\nEnter No.of Requests: ");
scanf("%d",&nor);
printf("\nEnter Requests:\n");
for(i=0;i<nor;i++)
{
printf("[%d]=",i);
scanf("%d",&ReqString[i]);
}
printf("\nEnter No.of Cylinders: ");
scanf("%d",&nob);
printf("\nEnter Start Block: ");
scanf("%d",&start);
 ReqString[nor++]=start;
 sort(ReqString);
 for(i=0;i<nor;i++)
 printf(" %d",ReqString[i]);
 for(spos=0;spos<=nor && ReqString[spos]!=start; spos++);
printf("\nEnter Direction: ");
scanf(" %c",&direction);
min=getmin();
max=getmax();
if(direction=='L')
{
printf("\n%d-%d",start,ReqString[0]);
thm+=start-ReqString[0];
printf("\n%d-%d",max,ReqString[spos+1]);
thm+=max-ReqString[spos+1];
}
else if(direction=='R')
{
printf("\n%d-%d",max,start);
thm+=max-start;
printf("\n%d-%d",ReqString[spos-1],min);
thm+=ReqString[spos-1]-min;
}
printf("\nTotal Head Movement: %d",thm);
}
